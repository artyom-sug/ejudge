#include <iostream>
using namespace std;
using llong = long long;

struct point {
    int x, y;
} a[100000], p;

int orient(point a, point b, point c) {
    llong s = (llong)(b.x - a.x) * (c.y - a.y) - (llong)(b.y - a.y) * (c.x - a.x);
    return (s > 0) ? 1 : (s < 0) ? -1 : 0;
}

bool seg(point a, point b, point p) {
    if (orient(a, b, p) != 0) return false;
    return p.x >= min(a.x, b.x) and p.x <= max(a.x, b.x) and p.y >= min(a.y, b.y) and p.y <= max(a.y, b.y);
}

int n;

int main() {
    cin >> n >> p.x >> p.y;
    for (int i = 0; i < n; i++) {
        cin >> a[i].x >> a[i].y;
    }
    for (int i = 0; i < n; i++) {
        int j = (i + 1) % n;
        if (seg(a[i], a[j], p)) {
            cout << "YES\n";
            return 0;
        }
    }
    bool flag = false;
    for (int i = 0, j = n - 1; i < n; j = i++) {
        if ((a[i].y > p.y) != (a[j].y > p.y)) {
            double inter = 1.0 * (a[j].x - a[i].x) * (p.y - a[i].y) / (a[j].y - a[i].y) + a[i].x;
            if (p.x <= inter) {
                flag = !flag;
            }
        }
    }
    cout << (flag ? "YES\n" : "NO\n");
}
